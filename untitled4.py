# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15cSdcfbFccpyMXP2NlCbAptJ02YzGEeN
"""

#1 задание (все норм)
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import lagrange

X0 = [-3,-1,1,3]
Y0 = [10.06,1.54,1.54,10.06]

int_fun = lagrange(X0,Y0)

x0 = float(input('Введите значение:'))
y0 = int_fun(x0)

x = np.arange(-3,3,0.01)
y = int_fun(x)



plt.figure(1)
plt.plot(X0,Y0,'ro',label = 'Известные точки функции')
plt.plot(x,y,label = 'Интерполяционная функция')
plt.plot(x0,y0,'g*',label = 'Значение функции в искомой точке')
plt.grid()
plt.legend()

#основа 2 (все норм)
import matplotlib.pyplot as plt
import numpy as np
from scipy.optimize import bisect

def my_fun(I):
  E = 10
  r = 1
  return E-I*r-(I+0.5*np.sqrt(I**5+16))

I = np.arange(1,10,0.01)
Y = my_fun(I)

plt.figure(1)
plt.plot(I,Y)
plt.grid()
I = bisect(my_fun,2,4)
print('Расчёт тока схемы I = {:.2f}'.format(I))

#3 задание
import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d

X0 = [0,109,155,250]
Y0 = [-10,-0.1,-66,-20]

f = interp1d(X0,Y0,'cubic')

x = np.arange(0,250,0.01)
y = f(x)


plt.figure(2)
plt.plot(X0,Y0, 'ro', label='Известные точки функции')
plt.plot(x,y, label='Интерполяционная функция')
plt.legend()
plt.grid()

#2 задание второй метод
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import fsolve

E = 10
r = 1

def tok(I):
 return E-I*r-(I+0.5*np.sqrt(I**5+16))

I_ur = np.linspace(0, 3, 1000)

tok_ur = tok(I_ur)

x = 1
result =fsolve(tok, x)

plt.plot(I_ur, tok_ur, label='Уравнение')
plt.plot(result,[0],'ro',label='Корень')
plt.xlabel('Ток')
plt.ylabel('Значение уравнения')
plt.legend()
plt.grid()

print("Ток в электрической цепи:",result[0])